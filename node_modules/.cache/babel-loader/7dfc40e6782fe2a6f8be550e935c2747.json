{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/Development/code/phase2/BIGPROJECT/boh/boh/src/containers/SuppliersContainer.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { baseURL } from '../index';\nimport { suppliersEndPoint } from '../index';\nimport '../style/Suppliers.css';\nimport SearchSuppliers from '../components/Suppliers/SearchSuppliers';\nimport SuppliersHome from '../components/Suppliers/SuppliersHome';\nimport SupplierNavBar from '../components/Suppliers/SupplierNavBar';\nimport CreateSupplier from '../components/Suppliers/CreateSupplier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SuppliersContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchSuppliers = () => {\n      fetch(baseURL + suppliersEndPoint).then(resp => resp.json()).then(data => this.setState({\n        suppliers: data\n      }));\n    };\n\n    this.handleSearchInput = event => {\n      const value = event.target.value;\n      this.searchSuppliers(value);\n    };\n\n    this.searchSuppliers = value => {\n      const found = this.state.suppliers.filter(supplier => {\n        return supplier.name.toLowerCase().includes(value.toString().toLowerCase());\n      });\n\n      if (value === \"\") {\n        return this.setState({\n          searchedSuppliers: []\n        });\n      } else {\n        return this.setState({\n          searchedSuppliers: found\n        });\n      }\n    };\n\n    this.handleFillState = event => {\n      const value = event.target.value.toString();\n      const name = event.target.name;\n      const targetId = event.target.id.toString();\n      this.fillState(value, name, targetId);\n    };\n\n    this.fillState = (value, name, targetId) => {\n      if (targetId.includes(\"address_\")) {\n        return this.setState({\n          newSupplier: { ...this.state.newSupplier,\n            address: { ...this.state.newSupplier.address,\n              [name]: value\n            }\n          }\n        });\n      } else if (targetId.includes(\"rep_\")) {\n        return this.setState({\n          newSupplier: { ...this.state.newSupplier,\n            representative: { ...this.state.newSupplier.representative,\n              [name]: value\n            }\n          }\n        });\n      } else if (targetId.includes(\"message_\")) {\n        return this.setState({\n          newSupplier: { ...this.state.newSupplier,\n            messages: [...this.state.newSupplier.messages, value]\n          }\n        });\n      } else if (targetId.includes(\"day_\")) {\n        return this.setState({\n          newSupplier: { ...this.state.newSupplier,\n            delivery_days: [...this.state.newSupplier.delivery_days, name]\n          }\n        });\n      } else {\n        return this.setState({\n          newSupplier: { ...this.state.newSupplier,\n            [name]: value\n          }\n        });\n      }\n    };\n\n    this.startNewSupplier = () => {\n      this.setState({\n        newSupplier: {\n          id: 1,\n          name: \"\",\n          company_logo_url: \"\",\n          address: {\n            lot_factory_number: \"\",\n            street_number: \"\",\n            street_name: \"\",\n            suburb: \"\",\n            postcode: \"\",\n            state: \"\"\n          },\n          contact_number: \"\",\n          representative: {\n            rep_name: \"\",\n            contact_number: \"\"\n          },\n          delivery_days: [],\n          messages: []\n        }\n      });\n    };\n\n    this.fillPendingMessage = event => {\n      const value = event.target.value;\n      return this.setState({\n        pendingMessage: value.toString()\n      });\n    };\n\n    this.submitMessage = () => {\n      this.setState({\n        newSupplier: { ...this.state.newSupplier,\n          messages: [...this.state.newSupplier.messages, this.state.pendingMessage]\n        }\n      });\n    };\n\n    this.state = {\n      suppliers: [],\n      searchedSuppliers: [],\n      searchInput: \"\",\n      pendingMessage: \"\",\n      newSupplier: {\n        id: 1,\n        name: \"\",\n        company_logo_url: \"\",\n        address: {\n          lot_factory_number: \"\",\n          street_number: \"\",\n          street_name: \"\",\n          suburb: \"\",\n          postcode: \"\",\n          state: \"\"\n        },\n        contact_number: \"\",\n        representative: {\n          rep_name: \"\",\n          contact_number: \"\"\n        },\n        delivery_days: [],\n        messages: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSuppliers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SupplierNavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/supplierHome\",\n            children: /*#__PURE__*/_jsxDEV(SuppliersHome, {\n              suppliers: this.state.suppliers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/searchSuppliers\",\n            children: /*#__PURE__*/_jsxDEV(SearchSuppliers, {\n              suppliersToDisplay: this.state.searchedSuppliers,\n              handleSearchInput: this.handleSearchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/addSupplier\",\n            children: /*#__PURE__*/_jsxDEV(CreateSupplier, {\n              fillState: this.handleFillState,\n              supplier: this.state.newSupplier,\n              startNewSupplier: this.startNewSupplier,\n              fillPendingMessage: this.fillPendingMessage,\n              submitMessage: this.submitMessage,\n              updateSuppliers: this.fetchSuppliers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SuppliersContainer;","map":{"version":3,"sources":["/Users/Justin/Development/code/phase2/BIGPROJECT/boh/boh/src/containers/SuppliersContainer.js"],"names":["React","BrowserRouter","Router","Route","baseURL","suppliersEndPoint","SearchSuppliers","SuppliersHome","SupplierNavBar","CreateSupplier","SuppliersContainer","Component","constructor","fetchSuppliers","fetch","then","resp","json","data","setState","suppliers","handleSearchInput","event","value","target","searchSuppliers","found","state","filter","supplier","name","toLowerCase","includes","toString","searchedSuppliers","handleFillState","targetId","id","fillState","newSupplier","address","representative","messages","delivery_days","startNewSupplier","company_logo_url","lot_factory_number","street_number","street_name","suburb","postcode","contact_number","rep_name","fillPendingMessage","pendingMessage","submitMessage","searchInput","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { baseURL } from '../index'\nimport { suppliersEndPoint } from '../index'\n\nimport '../style/Suppliers.css'\nimport SearchSuppliers from '../components/Suppliers/SearchSuppliers'\nimport SuppliersHome from '../components/Suppliers/SuppliersHome'\nimport SupplierNavBar from '../components/Suppliers/SupplierNavBar'\nimport CreateSupplier from '../components/Suppliers/CreateSupplier'\n\n\nclass SuppliersContainer extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            suppliers : [],\n            searchedSuppliers: [],\n            searchInput: \"\",\n            pendingMessage: \"\",\n            newSupplier:\n                {\n                id: 1,\n                name: \"\",\n                company_logo_url: \"\",\n                address: {\n                    lot_factory_number: \"\",\n                    street_number: \"\",\n                    street_name: \"\",\n                    suburb: \"\",\n                    postcode: \"\",\n                    state: \"\"\n                },\n                contact_number: \"\",\n                representative: {\n                    rep_name: \"\",\n                    contact_number: \"\"\n                },\n                delivery_days: [\n                ],\n                messages: [\n                ]\n            }\n        }\n    }\n    fetchSuppliers =()=> {\n        fetch(baseURL + suppliersEndPoint)\n        .then(resp=>resp.json())\n        .then(data=> this.setState({\n            suppliers: data\n        }))\n    }\n    componentDidMount(){\n        this.fetchSuppliers()\n    }\n\n    handleSearchInput=(event)=>{\n        const value = event.target.value\n        this.searchSuppliers(value)\n    }\n    searchSuppliers = (value) => {\n        const found = this.state.suppliers.filter(supplier => {return (\n            supplier.name.toLowerCase().includes(value.toString().toLowerCase()))})\n        if(value === \"\"){\n            return this.setState({\n                searchedSuppliers: []\n            })} else {\n            return this.setState({\n                searchedSuppliers: found\n            })\n        }\n    }\n    handleFillState = (event) => {\n        const value = event.target.value.toString()\n        const name = event.target.name\n        const targetId = event.target.id.toString()\n        this.fillState(value, name, targetId)\n    }\n    fillState = (value, name, targetId) => {\n        if(targetId.includes(\"address_\")){\n            return this.setState({\n                newSupplier:\n                    {\n                    ...this.state.newSupplier,\n                        address:{\n                            ...this.state.newSupplier.address,\n                            [name]: value\n                        }\n                    }\n            })\n        } else if (targetId.includes(\"rep_\")){\n            return this.setState({\n                newSupplier:\n                    {\n                    ...this.state.newSupplier,\n                    representative: {\n                        ...this.state.newSupplier.representative,\n                        [name]: value\n                        }\n                }\n            })\n        } else if (targetId.includes(\"message_\")){\n           return this.setState({\n                newSupplier:\n                    {\n                    ...this.state.newSupplier,\n                    messages: [\n                        ...this.state.newSupplier.messages,\n                        value\n                    ]\n                    }\n                })\n        } else if(targetId.includes(\"day_\")){\n           return this.setState({\n                newSupplier: {\n                    ...this.state.newSupplier,\n                    delivery_days: [\n                        ...this.state.newSupplier.delivery_days,\n                        name\n                    ]\n                    }\n            })\n        }else {\n            return this.setState({\n                newSupplier: {\n                    ...this.state.newSupplier,\n                    [name]: value\n                }\n            })\n        }\n    }\n    startNewSupplier = () => {\n        this.setState({\n            newSupplier: {\n                id: 1,\n                name: \"\",\n                company_logo_url: \"\",\n                address: {\n                    lot_factory_number: \"\",\n                    street_number: \"\",\n                    street_name: \"\",\n                    suburb: \"\",\n                    postcode: \"\",\n                    state: \"\"\n                },\n                contact_number: \"\",\n                representative: {\n                    rep_name: \"\",\n                    contact_number: \"\"\n                },\n                delivery_days: [\n                ],\n                messages: [\n                ]\n            }\n        })\n    }\n\n    fillPendingMessage = (event) => {\n        const value = event.target.value\n        return this.setState({\n            pendingMessage: value.toString()\n        })}\n\n    submitMessage = () => {\n        this.setState({\n            newSupplier: {\n                ...this.state.newSupplier,\n                messages: [\n                    ...this.state.newSupplier.messages,\n                    this.state.pendingMessage\n                ]\n            }\n        })\n    }\n    \n\n    render(){\n        return (\n            <div>\n                <Router>\n                    <div>\n                        < SupplierNavBar />\n                        <Route exact path=\"/supplierHome\">\n                            < SuppliersHome suppliers={this.state.suppliers}/>\n                        </Route>\n                        <Route exact path=\"/searchSuppliers\">\n                            < SearchSuppliers suppliersToDisplay={this.state.searchedSuppliers} handleSearchInput={this.handleSearchInput}/>\n                        </Route>\n                        <Route exact path=\"/addSupplier\">\n                            <CreateSupplier fillState={this.handleFillState} supplier={this.state.newSupplier} startNewSupplier={this.startNewSupplier} fillPendingMessage={this.fillPendingMessage} submitMessage={this.submitMessage} updateSuppliers={this.fetchSuppliers}/>\n                        </Route>\n                    </div>\n                </Router>\n            </div>\n        )\n    }\n\n}\n\nexport default SuppliersContainer"]},"metadata":{},"sourceType":"module"}