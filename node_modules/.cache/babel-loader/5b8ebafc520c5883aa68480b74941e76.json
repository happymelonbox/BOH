{"ast":null,"code":"var _jsxFileName = \"/Users/Justin/Development/code/phase2/BIGPROJECT/boh/boh/src/containers/RecipeContainer.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { recipeEndPoint } from '../index';\nimport { baseURL } from '../index';\nimport Recipes from '../components/Recipes/Recipes';\nimport CreateRecipe from '../components/Recipes/CreateRecipe';\nimport RecipeHomeNavBar from '../components/Recipes/RecipeHomeNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RecipeContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchRecipes = () => {\n      fetch(baseURL + recipeEndPoint).then(resp => resp.json()).then(data => {\n        this.setState({\n          recipes: data,\n          recipesToDisplay: data\n        });\n      });\n    };\n\n    this.handleSearchInput = value => {\n      this.searchRecipe(value);\n    };\n\n    this.searchRecipe = value => {\n      const searchedName = this.state.recipes.filter(recipe => {\n        return recipe.recipe_name.toLowerCase().includes(value.toLowerCase());\n      });\n      return value === '' ? this.setState({\n        recipesToDisplay: this.state.recipes\n      }) : this.setState({\n        recipesToDisplay: searchedName\n      }); //When I have time i will come back to this and make the search bar a keyword search to return\n      //all recipes that contain the keyword, currently cant figure it out - maybe something like .filter(recipe=>{recipe.ingredients[ingredient_name]})?\n      // const searchedIngredient = this.state.recipes.filter(recipe=>{\n      //     const ingredients = recipe.ingredients\n      //     const ingredientsValues = ingredients.filter(ingredient=>{\n      //         const eachIngredient = Object.values(ingredient_name)\n      //         return ingredient.contains(this.state.inputValue)}\n      //         )\n      //     return ingredientsValues\n      //     });\n      //     console.log(searchedIngredient)\n    };\n\n    this.state = {\n      recipes: [],\n      recipesToDisplay: [],\n      ingredients: [],\n      method: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRecipes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-home\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RecipeHomeNavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/recipes\",\n            children: /*#__PURE__*/_jsxDEV(Recipes, {\n              recipes: this.state.recipesToDisplay,\n              handleSearch: this.handleSearchInput,\n              inputValue: this.state.searchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createRecipe\",\n            children: /*#__PURE__*/_jsxDEV(CreateRecipe, {\n              addIngredient: this.addIngredient,\n              addStep: this.addStep,\n              fetchRecipes: this.fetchRecipes,\n              updateRecipes: this.updateRecipes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RecipeContainer;","map":{"version":3,"sources":["/Users/Justin/Development/code/phase2/BIGPROJECT/boh/boh/src/containers/RecipeContainer.js"],"names":["React","BrowserRouter","Router","Route","recipeEndPoint","baseURL","Recipes","CreateRecipe","RecipeHomeNavBar","RecipeContainer","Component","constructor","fetchRecipes","fetch","then","resp","json","data","setState","recipes","recipesToDisplay","handleSearchInput","value","searchRecipe","searchedName","state","filter","recipe","recipe_name","toLowerCase","includes","ingredients","method","componentDidMount","render","searchInput","addIngredient","addStep","updateRecipes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { recipeEndPoint } from '../index';\nimport { baseURL } from '../index';\n\nimport Recipes from '../components/Recipes/Recipes'\nimport CreateRecipe from '../components/Recipes/CreateRecipe'\nimport RecipeHomeNavBar from '../components/Recipes/RecipeHomeNavBar';\n\nclass RecipeContainer extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            recipes: [],\n            recipesToDisplay: [],\n            ingredients: [],\n            method: []\n        }\n    }\n    fetchRecipes = () => {\n        fetch(baseURL + recipeEndPoint)\n        .then(resp=>resp.json())\n        .then(data=>{this.setState({\n          recipes: data,\n          recipesToDisplay: data\n        })})\n    }\n    componentDidMount(){\n        this.fetchRecipes()\n      }\n\n    handleSearchInput=(value)=>{\n            this.searchRecipe(value)\n        }\n\n    searchRecipe = (value) => {\n        const searchedName = this.state.recipes.filter(recipe=>{\n                return (recipe.recipe_name.toLowerCase().includes(\n                    value.toLowerCase())\n                )\n            })\n            return value === '' ?\n                this.setState({\n                    recipesToDisplay: this.state.recipes\n                }) :\n                this.setState({\n                    recipesToDisplay: searchedName\n                })\n        //When I have time i will come back to this and make the search bar a keyword search to return\n        //all recipes that contain the keyword, currently cant figure it out - maybe something like .filter(recipe=>{recipe.ingredients[ingredient_name]})?\n        // const searchedIngredient = this.state.recipes.filter(recipe=>{\n        //     const ingredients = recipe.ingredients\n        //     const ingredientsValues = ingredients.filter(ingredient=>{\n        //         const eachIngredient = Object.values(ingredient_name)\n        //         return ingredient.contains(this.state.inputValue)}\n        //         )\n        //     return ingredientsValues\n        //     });\n        //     console.log(searchedIngredient)\n    }\n    update\n\n    render(){\n        return(\n            <div className=\"recipes-home\">\n                <Router>\n                    <div>\n                        < RecipeHomeNavBar />\n                        <Route exact path=\"/recipes\">\n                            <Recipes recipes={this.state.recipesToDisplay} handleSearch={this.handleSearchInput} inputValue={this.state.searchInput}/>\n                        </Route>\n                        <Route exact path=\"/createRecipe\">\n                            <CreateRecipe addIngredient={this.addIngredient} addStep={this.addStep} fetchRecipes={this.fetchRecipes} updateRecipes={this.updateRecipes}/>\n                        </Route>\n                    </div>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default RecipeContainer\n"]},"metadata":{},"sourceType":"module"}